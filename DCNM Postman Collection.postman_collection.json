{
	"info": {
		"_postman_id": "36284300-b82c-4577-a683-2ba9ce3be64a",
		"name": "DCNM Postman Collection",
		"description": "# Cisco Datacenter Network Manager (DCNM) API Postman Collection\n\nThis repository contains the a Postman collection and environment variable file to leverage the REST API on DCNM.  This collection was tested and built using DCNM 11.5(1) within the DevNet Sandbox infrastructure.  As such, some variables will need to be reset if used outside of this testbed.\n\n## Cisco DCNM Background\n\nDCNM is a network management platform for all NX-OS-centric network deployments.  DCNM has several different installation personas, including LAN Fabric (BGP-EVPN with VXLAN), LAN Management (classic layer-2/layer-3 architecture), IP Fabric for Media (IPFM) and storage networking (SAN), however this collection covers the LAN fabric deployment model supporting an EVPN-VXLAN fabric backed by Nexus 9000-series switching.  APIs for other personas, while potentially overlapping, are not covered as part of this collection.\n\n## Additional Resources\n- [DCNM Sandbox on DevNet](https://devnetsandbox.cisco.com/RM/Diagram/Index/4b6f511a-4d7c-4764-927b-0fc591a661c6?diagramType=Topology)\n- REST API documentation is available off-box [here](https://developer.cisco.com/docs/data-center-network-manager/11-5-1/)\n- REST API documentation also available directly on the DCNM at `http://DCNM.IP.ADDRESS/api-docs`\n\n## Covered APIs\n\n- DCNM administration\n- L4-L7 service operations\n- Fabric, Network, Interface, VRF, and Link top-down operations\n- LAN credential management\n- Policy and Template operations\n- Physical switch roles and discovery\n\n## Notes about the included ENV variables\n\nPrior to using any requests, please ensure you gather the token from your DCNM instance using the included API call `dcnm login - gather token`.  This call will log you into the DCNM (using credentials stored in the environment) and automatically store the key for use with every other request in the collection.\n\nIn order to keep the environment variables to a reasonable number, reuse was included.  While I made attempts to include commonly reused variables (fabric names, VRF names, etc), the variables may require a bit of context parsing to ensure the correct usage within a particular environment.  In some instances, variables are defined within the payload, but not inside of the environment file to discern that the specific variable should be replaced.  As a final note, for any API or payload referencing a device serial number -- please ensure correct serial numbers are inserted as appropriate.\n\n_In some instances, Javascript tests have been included as part of the API request to populate another variable that would be used somewhere else in that folder of requests (VRF IDs, VLAN IDs, etc).  These can be overridden in the environment settings, but have been included for automated tasks (like using Runner)_",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DCNM Administration",
			"item": [
				{
					"name": "add user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "userName=developer&password=Cisco12345!&roleName=network-admin&enablePwdExpiration=false"
						},
						"url": {
							"raw": "https://{{dcnm}}/fm/fmrest/dbadmin/addUser",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"fm",
								"fmrest",
								"dbadmin",
								"addUser"
							]
						},
						"description": "Adds user to DCNM store.  Pay attention to `role` and `expiration` values if used outside of lab/test environments."
					},
					"response": []
				},
				{
					"name": "get version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{dcnm}}/rest/dcnm-version",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"dcnm-version"
							]
						},
						"description": "Used to grab version value of DCNM application.  Does not require token for information."
					},
					"response": []
				}
			],
			"description": "Common tasks associated with the general usage of DCNM.  `get version` should be considered a base \"hello world\" operation that connectivity could be tested with prior to grabbing a token using credentials."
		},
		{
			"name": "Service Operations",
			"item": [
				{
					"name": "get service node ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes"
							]
						},
						"description": "Used to retrieve the service nodes present under the fabric defined within the URI.  The fabric will be an external fabric to the EVPN-VXLAN EasyFabric"
					},
					"response": []
				},
				{
					"name": "create service node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attachedFabricName\": \"{{fabric}}\",\n  \"attachedSwitchInterfaceName\": \"Ethernet1/52\",\n  \"attachedSwitchSn\": \"attachedSwitchSerialNumber\",\n  \"fabricName\": \"{{service_fabric}}\",\n  \"formFactor\": \"Virtual\",\n  \"interfaceName\": \"G1/1\",\n  \"lastUpdated\": 0,\n  \"linkTemplateName\": \"service_link_trunk\",\n  \"linkUuid\": \"string\",\n  \"name\": \"sn1\",\n  \"nvPairs\": {\n    \"SPEED\": \"Auto\",\n    \"MTU\": \"jumbo\",\n    \"ALLOWED_VLANS\": \"none\",\n    \"BPDUGUARD_ENABLED\": \"no\",\n    \"PORTTYPE_FAST_ENABLED\": \"true\",\n    \"ADMIN_STATE\": \"true\"\n  },\n  \"peerName\": \"string\",\n  \"type\": \"Firewall\",\n  \"vpcSwitchesAttached\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-node",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-node"
							]
						},
						"description": "Creates a service node within the external service fabric.  The payload will include the fabric that the node is attached to (EasyFabric) as well as the device and port-level information"
					},
					"response": []
				},
				{
					"name": "delete service node",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/{{service_fabric}}/service-nodes/{{service_node}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}"
							]
						},
						"description": "Removes the service node defined in the URI from the external service fabric (also defined in the URI)"
					},
					"response": []
				},
				{
					"name": "get route peering of node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics{{service_fabric}}/service-node/{{service_node}}/peerings",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics{{service_fabric}}",
								"service-node",
								"{{service_node}}",
								"peerings"
							]
						},
						"description": "Used to retrieve service route peering(s) for the selected service node under the selected fabric"
					},
					"response": []
				},
				{
					"name": "create route peering",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attachedFabricName\": \"{{fabric}}\",\n  \"deploymentMode\": \"IntraTenantFW\",\n  \"enabled\": false,\n  \"fabricName\": \"{{service_fabric}}\",\n  \"lastUpdated\": 0,\n  \"nextHopIp\": \"1.2.3.4\",\n  \"peeringName\": \"peering1\",\n  \"peeringOption\": \"None\",\n  \"reverseNextHopIp\": \"2.3.4.5\",\n  \"routes\": [\n    {\n      \"nvPairs\": {\n        \"MULTI_ROUTES\": \"5.5.5.5, 1.2.3.4\"\n      },\n      \"templateName\": \"service_static_route\",\n      \"vrfName\": \"vrf1\"\n    }\n  ],\n  \"serviceNetworks\": [\n    {\n      \"networkName\": \"serviceNetwork1\",\n      \"networkType\": \"InsideNetworkFW\",\n      \"nvPairs\": {\n        \"gatewayIpAddress\": \"1.2.3.1/24\",\n        \"vlanId\": \"1000\"\n      },\n      \"templateName\": \"Service_Network_Universal\",\n      \"vlanId\": 1000,\n      \"vrfName\": \"vrf1\"\n    }\n  ],\n  \"serviceNodeName\": \"sn1\",\n  \"serviceNodeType\": \"Firewall\",\n  \"status\": \"In-Sync\",\n  \"statusDetails\": [\n    {\n      \"fabricName\": \"attachedEasyFabric\",\n      \"resourceName\": \"serviceNetwork1\",\n      \"resourceType\": \"Network\",\n      \"switchStatuses\": [\n        {\n          \"status\": \"In-Sync\",\n          \"switchSerialNumber\": \"switchSerialNumber\",\n          \"updatedBy\": \"config-compliance\",\n          \"updatedTime\": 0\n        }\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/peerings",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"peerings"
							]
						},
						"description": "Used to create service route peering under the selected fabric, i.e. the logic attachment to the easy fabric"
					},
					"response": []
				},
				{
					"name": "attach route peering",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"peeringNames\": [\n        \"RP-1\",\n        \"RP-2\"\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/peerings/{{fabric}}/attachments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"peerings",
								"{{fabric}}",
								"attachments"
							]
						},
						"description": "Used to attach the service networks and their VRF of the selected route peerings to service leaf"
					},
					"response": []
				},
				{
					"name": "deploy route peering",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"peeringNames\": [\n        \"RP-1\",\n        \"RP-2\"\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/peerings/{{fabric}}/depoloyments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"peerings",
								"{{fabric}}",
								"depoloyments"
							]
						},
						"description": "Used to deploy the service network and its VRF of the selected route peerings to service leaf"
					},
					"response": []
				},
				{
					"name": "detach route peering",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/peerings/{{fabric}}/attachments?peering-names=RP-1",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"peerings",
								"{{fabric}}",
								"attachments"
							],
							"query": [
								{
									"key": "peering-names",
									"value": "RP-1"
								}
							]
						},
						"description": "Used to detach the service networks and their VRF of the selected route peering to service leaf"
					},
					"response": []
				},
				{
					"name": "delete route peering",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/peerings/{{fabric}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"peerings",
								"{{fabric}}"
							]
						},
						"description": "Used to delete a service route peering for the selected service node of the type under the selected fabric"
					},
					"response": []
				},
				{
					"name": "get service policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/{{service_fabric}}/service-nodes/{{service_node}}/policies",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies"
							]
						},
						"description": "Used to retrieve service policies for the selected service node under the selected fabric"
					},
					"response": []
				},
				{
					"name": "create service policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attachDetails\": [\n    {\n      \"fabricName\": \"{{fabric}}\",\n      \"resourceName\": \"serviceNetwork1\",\n      \"resourceType\": \"Network\",\n      \"switchAttaches\": [\n        {\n          \"attachState\": \"DEPLOYED\",\n          \"lanAttached\": true,\n          \"portNames\": \"Ethernet1/52\",\n          \"switchIp\": \"123.23.23.23\",\n          \"switchName\": \"switchABC\",\n          \"switchRole\": \"leaf\",\n          \"switchSerialNumber\": \"switchSerialNumber\",\n          \"vlanId\": 1000\n        }\n      ]\n    }\n  ],\n  \"attachedFabricName\": \"{{fabric}}\",\n  \"destinationInterfaces\": {\n    \"swSerialNumber2\": \"Ethernet1/53.3\"\n  },\n  \"destinationNetwork\": \"12.1.1.2/32\",\n  \"destinationNetworkName\": \"destNet1\",\n  \"destinationVrfName\": \"vrf1\",\n  \"enabled\": true,\n  \"fabricName\": \"{{service_fabric}}\",\n  \"lastUpdated\": 0,\n  \"nextHopIp\": \"1.2.3.4\",\n  \"nvPairs\": {\n    \"PROTOCOL\": \"tcp\",\n    \"SRC_PORT\": \"any\",\n    \"DEST_PORT\": \"443\",\n    \"ROUTE_MAP_ACTION\": \"permit\",\n    \"NEXT_HOP_OPTION\": \"none\"\n  },\n  \"peeringName\": \"peering1\",\n  \"policyName\": \"policy1\",\n  \"policyTemplateName\": \"service_pbr\",\n  \"reverseEnabled\": true,\n  \"reverseNextHopIp\": \"2.3.4.5\",\n  \"routeMapName\": \"string\",\n  \"serviceNodeName\": \"sn1\",\n  \"serviceNodeType\": \"Firewall\",\n  \"sourceInterfaces\": {\n    \"swSerialNumber1\": \"Ethernet1/53.2,Ethernet1/54.2\"\n  },\n  \"sourceNetwork\": \"11.1.1.1/24\",\n  \"sourceNetworkName\": \"srcNet1\",\n  \"sourceVrfName\": \"vrf1\",\n  \"status\": \"In-Sync\",\n  \"statusDetails\": [\n    {\n      \"fabricName\": \"{{fabric}}\",\n      \"resourceName\": \"serviceNetwork1\",\n      \"resourceType\": \"Network\",\n      \"switchStatuses\": [\n        {\n          \"status\": \"In-Sync\",\n          \"switchSerialNumber\": \"switchSerialNumber\",\n          \"updatedBy\": \"config-compliance\",\n          \"updatedTime\": 0\n        }\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/policies",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies"
							]
						},
						"description": "Used to create a service policy for the selected service node under the selected fabric"
					},
					"response": []
				},
				{
					"name": "attach service policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policyNames\": [\n    \"SP-1\",\n    \"SP-2\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/policies/{{fabric}}/attachments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies",
								"{{fabric}}",
								"attachments"
							]
						},
						"description": "Used to enable the service policies on the source or/and destination networks"
					},
					"response": []
				},
				{
					"name": "deploy service policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policyNames\": [\n    \"SP-1\",\n    \"SP-2\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/policies/{{fabric}}/deployments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies",
								"{{fabric}}",
								"deployments"
							]
						},
						"description": "Used to deploy the service policy on the source or/and destination network if those networks have been attached."
					},
					"response": []
				},
				{
					"name": "detach service policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/policies/{{fabric}}/attachments?policy-names=SP-1",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies",
								"{{fabric}}",
								"attachments"
							],
							"query": [
								{
									"key": "policy-names",
									"value": "SP-1"
								}
							]
						},
						"description": "Used to disable the service policies on the source or/and destination networks"
					},
					"response": []
				},
				{
					"name": "delete service policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/fabrics/{{service_fabric}}/service-nodes/{{service_node}}/policies",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"fabrics",
								"{{service_fabric}}",
								"service-nodes",
								"{{service_node}}",
								"policies"
							]
						},
						"description": "Used to delete service policies for the selected service node under the selected fabric and attached fabric"
					},
					"response": []
				}
			],
			"description": "Operations centered around service insertion (L4-L7) within a fabric.  This set of requests covers individual nodes, peerings between external devices and the fabric, and the policies within the service insertion."
		},
		{
			"name": "Fabric Operations",
			"item": [
				{
					"name": "get single fabric",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric}}"
							]
						},
						"description": "Lists the fabric details for the queried fabric."
					},
					"response": []
				},
				{
					"name": "get all fabrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics"
							]
						},
						"description": "Queries DCNM for all facts and information about all configured fabrics within the inventory"
					},
					"response": []
				},
				{
					"name": "get fabric inventory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric}}/inventory",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric}}",
								"inventory"
							]
						},
						"description": "Gets all information for all devices that are part of the fabric named in the URI, including both DCNM as well as hardware specific facts."
					},
					"response": []
				},
				{
					"name": "create fabric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fabricName\": \"{{fabric}}\",\n    \"nvPairs\": {\n        \"AAA_REMOTE_IP_ENABLED\": false,\n        \"AAA_SERVER_CONF\": \"\",\n        \"ACTIVE_MIGRATION\": \"false\",\n        \"ADVERTISE_PIP_BGP\": false,\n        \"AGENT_INTF\": \"eth0\",\n        \"ANYCAST_GW_MAC\": \"2020.0000.00aa\",\n        \"ANYCAST_LB_ID\": \"\",\n        \"ANYCAST_RP_IP_RANGE\": \"10.254.254.0/24\",\n        \"ANYCAST_RP_IP_RANGE_INTERNAL\": \"\",\n        \"AUTO_SYMMETRIC_VRF_LITE\": \"\",\n        \"BFD_AUTH_ENABLE\": \"\",\n        \"BFD_AUTH_KEY\": \"\",\n        \"BFD_AUTH_KEY_ID\": \"\",\n        \"BFD_ENABLE\": false,\n        \"BFD_IBGP_ENABLE\": \"\",\n        \"BFD_ISIS_ENABLE\": \"\",\n        \"BFD_OSPF_ENABLE\": \"\",\n        \"BFD_PIM_ENABLE\": \"\",\n        \"BGP_AS\": \"65001\",\n        \"BGP_AUTH_ENABLE\": false,\n        \"BGP_AUTH_KEY\": \"\",\n        \"BGP_AUTH_KEY_TYPE\": \"\",\n        \"BGP_LB_ID\": \"0\",\n        \"BOOTSTRAP_CONF\": \"\",\n        \"BOOTSTRAP_ENABLE\": false,\n        \"BOOTSTRAP_MULTISUBNET\": \"\",\n        \"BOOTSTRAP_MULTISUBNET_INTERNAL\": \"\",\n        \"BRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"BROWNFIELD_NETWORK_NAME_FORMAT\": \"Auto_Net_VNI$$VNI$$_VLAN$$VLAN_ID$$\",\n        \"CDP_ENABLE\": false,\n        \"COPP_POLICY\": \"strict\",\n        \"DCI_SUBNET_RANGE\": \"10.33.0.0/16\",\n        \"DCI_SUBNET_TARGET_MASK\": \"30\",\n        \"DEAFULT_QUEUING_POLICY_CLOUDSCALE\": \"\",\n        \"DEAFULT_QUEUING_POLICY_OTHER\": \"\",\n        \"DEAFULT_QUEUING_POLICY_R_SERIES\": \"\",\n        \"DEPLOYMENT_FREEZE\": \"false\",\n        \"DHCP_ENABLE\": \"\",\n        \"DHCP_END\": \"\",\n        \"DHCP_END_INTERNAL\": \"\",\n        \"DHCP_IPV6_ENABLE\": \"\",\n        \"DHCP_IPV6_ENABLE_INTERNAL\": \"\",\n        \"DHCP_START\": \"\",\n        \"DHCP_START_INTERNAL\": \"\",\n        \"DNS_SERVER_IP_LIST\": \"\",\n        \"DNS_SERVER_VRF\": \"\",\n        \"ENABLE_AAA\": \"\",\n        \"ENABLE_AGENT\": \"false\",\n        \"ENABLE_DEFAULT_QUEUING_POLICY\": false,\n        \"ENABLE_EVPN\": \"true\",\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID\": false,\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID_PREV\": \"\",\n        \"ENABLE_MACSEC\": false,\n        \"ENABLE_NGOAM\": true,\n        \"ENABLE_NXAPI\": true,\n        \"ENABLE_NXAPI_HTTP\": true,\n        \"ENABLE_PBR\": false,\n        \"ENABLE_TENANT_DHCP\": true,\n        \"ENABLE_TRM\": false,\n        \"ENABLE_VPC_PEER_LINK_NATIVE_VLAN\": false,\n        \"EXTRA_CONF_INTRA_LINKS\": \"\",\n        \"EXTRA_CONF_LEAF\": \"\",\n        \"EXTRA_CONF_SPINE\": \"\",\n        \"FABRIC_INTERFACE_TYPE\": \"p2p\",\n        \"FABRIC_MTU\": \"9216\",\n        \"FABRIC_MTU_PREV\": \"9216\",\n        \"FABRIC_NAME\": \"fabric1\",\n        \"FABRIC_TYPE\": \"Switch_Fabric\",\n        \"FABRIC_VPC_DOMAIN_ID\": \"\",\n        \"FABRIC_VPC_DOMAIN_ID_PREV\": \"\",\n        \"FABRIC_VPC_QOS\": false,\n        \"FABRIC_VPC_QOS_POLICY_NAME\": \"\",\n        \"FEATURE_PTP\": false,\n        \"FEATURE_PTP_INTERNAL\": \"false\",\n        \"FF\": \"Easy_Fabric\",\n        \"GRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"HD_TIME\": \"180\",\n        \"IBGP_PEER_TEMPLATE\": \"\",\n        \"IBGP_PEER_TEMPLATE_LEAF\": \"\",\n        \"ISIS_AUTH_ENABLE\": \"\",\n        \"ISIS_AUTH_KEY\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_KEY_ID\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_NAME\": \"\",\n        \"ISIS_LEVEL\": \"\",\n        \"ISIS_P2P_ENABLE\": \"\",\n        \"L2_HOST_INTF_MTU\": \"9216\",\n        \"L2_HOST_INTF_MTU_PREV\": \"9216\",\n        \"L2_SEGMENT_ID_RANGE\": \"30000-49000\",\n        \"L3VNI_MCAST_GROUP\": \"\",\n        \"L3_PARTITION_ID_RANGE\": \"50000-59000\",\n        \"LINK_STATE_ROUTING\": \"ospf\",\n        \"LINK_STATE_ROUTING_TAG\": \"UNDERLAY\",\n        \"LINK_STATE_ROUTING_TAG_PREV\": \"\",\n        \"LOOPBACK0_IPV6_RANGE\": \"\",\n        \"LOOPBACK0_IP_RANGE\": \"10.2.0.0/22\",\n        \"LOOPBACK1_IPV6_RANGE\": \"\",\n        \"LOOPBACK1_IP_RANGE\": \"10.3.0.0/22\",\n        \"MACSEC_ALGORITHM\": \"\",\n        \"MACSEC_CIPHER_SUITE\": \"\",\n        \"MACSEC_FALLBACK_ALGORITHM\": \"\",\n        \"MACSEC_FALLBACK_KEY_STRING\": \"\",\n        \"MACSEC_KEY_STRING\": \"\",\n        \"MACSEC_REPORT_TIMER\": \"\",\n        \"MGMT_GW\": \"\",\n        \"MGMT_GW_INTERNAL\": \"\",\n        \"MGMT_PREFIX\": \"\",\n        \"MGMT_PREFIX_INTERNAL\": \"\",\n        \"MGMT_V6PREFIX\": \"\",\n        \"MGMT_V6PREFIX_INTERNAL\": \"\",\n        \"MPLS_HANDOFF\": true,\n        \"MPLS_LB_ID\": \"101\",\n        \"MPLS_LOOPBACK_IP_RANGE\": \"10.101.0.0/25\",\n        \"MULTICAST_GROUP_SUBNET\": \"239.1.1.0/25\",\n        \"NETWORK_VLAN_RANGE\": \"2300-2999\",\n        \"NTP_SERVER_IP_LIST\": \"\",\n        \"NTP_SERVER_VRF\": \"\",\n        \"NVE_LB_ID\": \"1\",\n        \"OSPF_AREA_ID\": \"0.0.0.0\",\n        \"OSPF_AUTH_ENABLE\": false,\n        \"OSPF_AUTH_KEY\": \"\",\n        \"OSPF_AUTH_KEY_ID\": \"\",\n        \"PHANTOM_RP_LB_ID1\": \"\",\n        \"PHANTOM_RP_LB_ID2\": \"\",\n        \"PHANTOM_RP_LB_ID3\": \"\",\n        \"PHANTOM_RP_LB_ID4\": \"\",\n        \"PIM_HELLO_AUTH_ENABLE\": false,\n        \"PIM_HELLO_AUTH_KEY\": \"\",\n        \"POWER_REDUNDANCY_MODE\": \"ps-redundant\",\n        \"PTP_DOMAIN_ID\": \"\",\n        \"PTP_LB_ID\": \"\",\n        \"REPLICATION_MODE\": \"Multicast\",\n        \"ROUTER_ID_RANGE\": \"\",\n        \"ROUTE_MAP_SEQUENCE_NUMBER_RANGE\": \"1-65534\",\n        \"RP_COUNT\": \"2\",\n        \"RP_LB_ID\": \"254\",\n        \"RP_MODE\": \"asm\",\n        \"RR_COUNT\": \"2\",\n        \"SERVICE_NETWORK_VLAN_RANGE\": \"3000-3199\",\n        \"SITE_ID\": \"65001\",\n        \"SNMP_SERVER_HOST_TRAP\": true,\n        \"SPINE_COUNT\": \"0\",\n        \"SSPINE_ADD_DEL_DEBUG_FLAG\": \"Disable\",\n        \"SSPINE_COUNT\": \"0\",\n        \"STATIC_UNDERLAY_IP_ALLOC\": false,\n        \"STRICT_CC_MODE\": false,\n        \"SUBINTERFACE_RANGE\": \"2-511\",\n        \"SUBNET_RANGE\": \"10.4.0.0/16\",\n        \"SUBNET_TARGET_MASK\": \"30\",\n        \"SYSLOG_SERVER_IP_LIST\": \"\",\n        \"SYSLOG_SERVER_VRF\": \"\",\n        \"SYSLOG_SEV\": \"\",\n        \"UNDERLAY_IS_V6\": false,\n        \"USE_LINK_LOCAL\": \"\",\n        \"V6_SUBNET_RANGE\": \"\",\n        \"V6_SUBNET_TARGET_MASK\": \"\",\n        \"VPC_AUTO_RECOVERY_TIME\": \"360\",\n        \"VPC_DELAY_RESTORE\": \"150\",\n        \"VPC_DELAY_RESTORE_TIME\": \"60\",\n        \"VPC_DOMAIN_ID_RANGE\": \"1-1000\",\n        \"VPC_ENABLE_IPv6_ND_SYNC\": true,\n        \"VPC_PEER_KEEP_ALIVE_OPTION\": \"management\",\n        \"VPC_PEER_LINK_PO\": \"500\",\n        \"VPC_PEER_LINK_VLAN\": \"3600\",\n        \"VRF_LITE_AUTOCONFIG\": \"Manual\",\n        \"VRF_VLAN_RANGE\": \"2000-2299\",\n        \"abstract_anycast_rp\": \"anycast_rp\",\n        \"abstract_bgp\": \"base_bgp\",\n        \"abstract_bgp_neighbor\": \"evpn_bgp_rr_neighbor\",\n        \"abstract_bgp_rr\": \"evpn_bgp_rr\",\n        \"abstract_dhcp\": \"base_dhcp\",\n        \"abstract_extra_config_bootstrap\": \"extra_config_bootstrap_11_1\",\n        \"abstract_extra_config_leaf\": \"extra_config_leaf\",\n        \"abstract_extra_config_spine\": \"extra_config_spine\",\n        \"abstract_feature_leaf\": \"base_feature_leaf_upg\",\n        \"abstract_feature_spine\": \"base_feature_spine_upg\",\n        \"abstract_isis\": \"base_isis_level2\",\n        \"abstract_isis_interface\": \"isis_interface\",\n        \"abstract_loopback_interface\": \"int_fabric_loopback_11_1\",\n        \"abstract_multicast\": \"base_multicast_11_1\",\n        \"abstract_ospf\": \"base_ospf\",\n        \"abstract_ospf_interface\": \"ospf_interface_11_1\",\n        \"abstract_pim_interface\": \"pim_interface\",\n        \"abstract_route_map\": \"route_map\",\n        \"abstract_routed_host\": \"int_routed_host_11_1\",\n        \"abstract_trunk_host\": \"int_trunk_host_11_1\",\n        \"abstract_vlan_interface\": \"int_fabric_vlan_11_1\",\n        \"abstract_vpc_domain\": \"base_vpc_domain_11_1\",\n        \"default_network\": \"Default_Network_Universal\",\n        \"default_vrf\": \"Default_VRF_Universal\",\n        \"enableRealTimeBackup\": false,\n        \"enableScheduledBackup\": false,\n        \"network_extension_template\": \"Default_Network_Extension_Universal\",\n        \"scheduledTime\": \"\",\n        \"software_image\": \"\",\n        \"temp_anycast_gateway\": \"anycast_gateway\",\n        \"temp_vpc_domain_mgmt\": \"vpc_domain_mgmt\",\n        \"temp_vpc_peer_link\": \"int_vpc_peer_link_po_11_1\",\n        \"vrf_extension_template\": \"Default_VRF_Extension_Universal\"\n    },\n    \"templateName\": \"Easy_Fabric_11_1\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics"
							]
						},
						"description": "Creates a new fabric with the specific nv pairs defined within the payload.  These values mimic the names/values that would be applied through the DCNM Fabric Builder UI.  To obtain a payload for this deployment, the API-Tool within DCNM can watch the request through the UI and give the applicable call and payload for reuse/modification later."
					},
					"response": []
				},
				{
					"name": "modify fabric",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fabricId\": \"FABRIC-4\",\n    \"fabricName\": \"{{fabric}}\",\n    \"id\": {{fabric_id_number}},\n    \"nvPairs\": {\n        \"AAA_REMOTE_IP_ENABLED\": false,\n        \"AAA_SERVER_CONF\": \"\",\n        \"ACTIVE_MIGRATION\": \"false\",\n        \"ADVERTISE_PIP_BGP\": false,\n        \"AGENT_INTF\": \"eth0\",\n        \"ANYCAST_GW_MAC\": \"0011.aabb.ccdd\",\n        \"ANYCAST_LB_ID\": \"\",\n        \"ANYCAST_RP_IP_RANGE\": \"10.254.254.0/24\",\n        \"ANYCAST_RP_IP_RANGE_INTERNAL\": \"\",\n        \"AUTO_SYMMETRIC_VRF_LITE\": false,\n        \"BFD_AUTH_ENABLE\": \"\",\n        \"BFD_AUTH_KEY\": \"\",\n        \"BFD_AUTH_KEY_ID\": \"\",\n        \"BFD_ENABLE\": false,\n        \"BFD_IBGP_ENABLE\": \"\",\n        \"BFD_ISIS_ENABLE\": \"\",\n        \"BFD_OSPF_ENABLE\": \"\",\n        \"BFD_PIM_ENABLE\": \"\",\n        \"BGP_AS\": \"65001\",\n        \"BGP_AUTH_ENABLE\": false,\n        \"BGP_AUTH_KEY\": \"\",\n        \"BGP_AUTH_KEY_TYPE\": \"\",\n        \"BGP_LB_ID\": \"0\",\n        \"BOOTSTRAP_CONF\": \"\",\n        \"BOOTSTRAP_ENABLE\": false,\n        \"BOOTSTRAP_MULTISUBNET\": \"\",\n        \"BOOTSTRAP_MULTISUBNET_INTERNAL\": \"\",\n        \"BRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"BROWNFIELD_NETWORK_NAME_FORMAT\": \"Auto_Net_VNI$$VNI$$_VLAN$$VLAN_ID$$\",\n        \"CDP_ENABLE\": false,\n        \"COPP_POLICY\": \"strict\",\n        \"DCI_SUBNET_RANGE\": \"10.33.0.0/16\",\n        \"DCI_SUBNET_TARGET_MASK\": \"30\",\n        \"DEAFULT_QUEUING_POLICY_CLOUDSCALE\": \"\",\n        \"DEAFULT_QUEUING_POLICY_OTHER\": \"\",\n        \"DEAFULT_QUEUING_POLICY_R_SERIES\": \"\",\n        \"DEPLOYMENT_FREEZE\": \"false\",\n        \"DHCP_ENABLE\": \"\",\n        \"DHCP_END\": \"\",\n        \"DHCP_END_INTERNAL\": \"\",\n        \"DHCP_IPV6_ENABLE\": \"\",\n        \"DHCP_IPV6_ENABLE_INTERNAL\": \"\",\n        \"DHCP_START\": \"\",\n        \"DHCP_START_INTERNAL\": \"\",\n        \"DNS_SERVER_IP_LIST\": \"\",\n        \"DNS_SERVER_VRF\": \"\",\n        \"ENABLE_AAA\": \"\",\n        \"ENABLE_AGENT\": \"false\",\n        \"ENABLE_DEFAULT_QUEUING_POLICY\": false,\n        \"ENABLE_EVPN\": \"true\",\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID\": false,\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID_PREV\": \"false\",\n        \"ENABLE_MACSEC\": false,\n        \"ENABLE_NGOAM\": true,\n        \"ENABLE_NXAPI\": true,\n        \"ENABLE_NXAPI_HTTP\": true,\n        \"ENABLE_PBR\": false,\n        \"ENABLE_TENANT_DHCP\": true,\n        \"ENABLE_TRM\": false,\n        \"ENABLE_VPC_PEER_LINK_NATIVE_VLAN\": false,\n        \"EXTRA_CONF_INTRA_LINKS\": \"\",\n        \"EXTRA_CONF_LEAF\": \"\",\n        \"EXTRA_CONF_SPINE\": \"\",\n        \"FABRIC_INTERFACE_TYPE\": \"p2p\",\n        \"FABRIC_MTU\": \"9216\",\n        \"FABRIC_MTU_PREV\": \"9216\",\n        \"FABRIC_NAME\": \"fabric1\",\n        \"FABRIC_TYPE\": \"Switch_Fabric\",\n        \"FABRIC_VPC_DOMAIN_ID\": \"\",\n        \"FABRIC_VPC_DOMAIN_ID_PREV\": \"\",\n        \"FABRIC_VPC_QOS\": false,\n        \"FABRIC_VPC_QOS_POLICY_NAME\": \"\",\n        \"FEATURE_PTP\": false,\n        \"FEATURE_PTP_INTERNAL\": \"false\",\n        \"FF\": \"Easy_Fabric\",\n        \"GRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"HD_TIME\": \"180\",\n        \"IBGP_PEER_TEMPLATE\": \"\",\n        \"IBGP_PEER_TEMPLATE_LEAF\": \"\",\n        \"ISIS_AUTH_ENABLE\": \"\",\n        \"ISIS_AUTH_KEY\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_KEY_ID\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_NAME\": \"\",\n        \"ISIS_LEVEL\": \"\",\n        \"ISIS_P2P_ENABLE\": \"\",\n        \"L2_HOST_INTF_MTU\": \"9216\",\n        \"L2_HOST_INTF_MTU_PREV\": \"9216\",\n        \"L2_SEGMENT_ID_RANGE\": \"30000-49000\",\n        \"L3VNI_MCAST_GROUP\": \"\",\n        \"L3_PARTITION_ID_RANGE\": \"50000-59000\",\n        \"LINK_STATE_ROUTING\": \"ospf\",\n        \"LINK_STATE_ROUTING_TAG\": \"UNDERLAY\",\n        \"LINK_STATE_ROUTING_TAG_PREV\": \"UNDERLAY\",\n        \"LOOPBACK0_IPV6_RANGE\": \"\",\n        \"LOOPBACK0_IP_RANGE\": \"10.2.0.0/22\",\n        \"LOOPBACK1_IPV6_RANGE\": \"\",\n        \"LOOPBACK1_IP_RANGE\": \"10.3.0.0/22\",\n        \"MACSEC_ALGORITHM\": \"\",\n        \"MACSEC_CIPHER_SUITE\": \"\",\n        \"MACSEC_FALLBACK_ALGORITHM\": \"\",\n        \"MACSEC_FALLBACK_KEY_STRING\": \"\",\n        \"MACSEC_KEY_STRING\": \"\",\n        \"MACSEC_REPORT_TIMER\": \"\",\n        \"MGMT_GW\": \"\",\n        \"MGMT_GW_INTERNAL\": \"\",\n        \"MGMT_PREFIX\": \"\",\n        \"MGMT_PREFIX_INTERNAL\": \"\",\n        \"MGMT_V6PREFIX\": \"\",\n        \"MGMT_V6PREFIX_INTERNAL\": \"\",\n        \"MPLS_HANDOFF\": true,\n        \"MPLS_LB_ID\": \"101\",\n        \"MPLS_LOOPBACK_IP_RANGE\": \"10.101.0.0/25\",\n        \"MULTICAST_GROUP_SUBNET\": \"239.1.1.0/25\",\n        \"NETWORK_VLAN_RANGE\": \"2300-2999\",\n        \"NTP_SERVER_IP_LIST\": \"\",\n        \"NTP_SERVER_VRF\": \"\",\n        \"NVE_LB_ID\": \"1\",\n        \"OSPF_AREA_ID\": \"0.0.0.0\",\n        \"OSPF_AUTH_ENABLE\": false,\n        \"OSPF_AUTH_KEY\": \"\",\n        \"OSPF_AUTH_KEY_ID\": \"\",\n        \"PHANTOM_RP_LB_ID1\": \"\",\n        \"PHANTOM_RP_LB_ID2\": \"\",\n        \"PHANTOM_RP_LB_ID3\": \"\",\n        \"PHANTOM_RP_LB_ID4\": \"\",\n        \"PIM_HELLO_AUTH_ENABLE\": false,\n        \"PIM_HELLO_AUTH_KEY\": \"\",\n        \"POWER_REDUNDANCY_MODE\": \"ps-redundant\",\n        \"PTP_DOMAIN_ID\": \"\",\n        \"PTP_LB_ID\": \"\",\n        \"REPLICATION_MODE\": \"Multicast\",\n        \"ROUTER_ID_RANGE\": \"\",\n        \"ROUTE_MAP_SEQUENCE_NUMBER_RANGE\": \"1-65534\",\n        \"RP_COUNT\": \"2\",\n        \"RP_LB_ID\": \"254\",\n        \"RP_MODE\": \"asm\",\n        \"RR_COUNT\": \"2\",\n        \"SERVICE_NETWORK_VLAN_RANGE\": \"3000-3199\",\n        \"SITE_ID\": \"65001\",\n        \"SNMP_SERVER_HOST_TRAP\": true,\n        \"SPINE_COUNT\": \"0\",\n        \"SSPINE_ADD_DEL_DEBUG_FLAG\": \"Disable\",\n        \"SSPINE_COUNT\": \"0\",\n        \"STATIC_UNDERLAY_IP_ALLOC\": false,\n        \"STRICT_CC_MODE\": false,\n        \"SUBINTERFACE_RANGE\": \"2-511\",\n        \"SUBNET_RANGE\": \"10.4.0.0/16\",\n        \"SUBNET_TARGET_MASK\": \"30\",\n        \"SYSLOG_SERVER_IP_LIST\": \"\",\n        \"SYSLOG_SERVER_VRF\": \"\",\n        \"SYSLOG_SEV\": \"\",\n        \"UNDERLAY_IS_V6\": false,\n        \"USE_LINK_LOCAL\": \"\",\n        \"V6_SUBNET_RANGE\": \"\",\n        \"V6_SUBNET_TARGET_MASK\": \"\",\n        \"VPC_AUTO_RECOVERY_TIME\": \"360\",\n        \"VPC_DELAY_RESTORE\": \"150\",\n        \"VPC_DELAY_RESTORE_TIME\": \"60\",\n        \"VPC_DOMAIN_ID_RANGE\": \"1-1000\",\n        \"VPC_ENABLE_IPv6_ND_SYNC\": true,\n        \"VPC_PEER_KEEP_ALIVE_OPTION\": \"management\",\n        \"VPC_PEER_LINK_PO\": \"500\",\n        \"VPC_PEER_LINK_VLAN\": \"3600\",\n        \"VRF_LITE_AUTOCONFIG\": \"Back2BackOnly\",\n        \"VRF_VLAN_RANGE\": \"2000-2299\",\n        \"abstract_anycast_rp\": \"anycast_rp\",\n        \"abstract_bgp\": \"base_bgp\",\n        \"abstract_bgp_neighbor\": \"evpn_bgp_rr_neighbor\",\n        \"abstract_bgp_rr\": \"evpn_bgp_rr\",\n        \"abstract_dhcp\": \"base_dhcp\",\n        \"abstract_extra_config_bootstrap\": \"extra_config_bootstrap_11_1\",\n        \"abstract_extra_config_leaf\": \"extra_config_leaf\",\n        \"abstract_extra_config_spine\": \"extra_config_spine\",\n        \"abstract_feature_leaf\": \"base_feature_leaf_upg\",\n        \"abstract_feature_spine\": \"base_feature_spine_upg\",\n        \"abstract_isis\": \"base_isis_level2\",\n        \"abstract_isis_interface\": \"isis_interface\",\n        \"abstract_loopback_interface\": \"int_fabric_loopback_11_1\",\n        \"abstract_multicast\": \"base_multicast_11_1\",\n        \"abstract_ospf\": \"base_ospf\",\n        \"abstract_ospf_interface\": \"ospf_interface_11_1\",\n        \"abstract_pim_interface\": \"pim_interface\",\n        \"abstract_route_map\": \"route_map\",\n        \"abstract_routed_host\": \"int_routed_host_11_1\",\n        \"abstract_trunk_host\": \"int_trunk_host_11_1\",\n        \"abstract_vlan_interface\": \"int_fabric_vlan_11_1\",\n        \"abstract_vpc_domain\": \"base_vpc_domain_11_1\",\n        \"default_network\": \"Default_Network_Universal\",\n        \"default_vrf\": \"Default_VRF_Universal\",\n        \"enableRealTimeBackup\": false,\n        \"enableScheduledBackup\": false,\n        \"network_extension_template\": \"Default_Network_Extension_Universal\",\n        \"scheduledTime\": \"\",\n        \"software_image\": \"\",\n        \"temp_anycast_gateway\": \"anycast_gateway\",\n        \"temp_vpc_domain_mgmt\": \"vpc_domain_mgmt\",\n        \"temp_vpc_peer_link\": \"int_vpc_peer_link_po_11_1\",\n        \"vrf_extension_template\": \"Default_VRF_Extension_Universal\"\n    },\n    \"templateName\": \"Easy_Fabric_11_1\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric}}"
							]
						},
						"description": "Used to modify an existing fabric with the desired nv pairs in the payload.  Can use similar payload to that used for creating a fabric."
					},
					"response": []
				},
				{
					"name": "delete fabric",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric}}"
							]
						},
						"description": "Removes fabric named in the URI from DCNM"
					},
					"response": []
				},
				{
					"name": "discover switches",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"seedIP\": \"10.195.225.159\",\n    \"snmpV3AuthProtocol\": \"0\",\n    \"username\": \"admin\",\n    \"password\": \"ins3965!\",\n    \"maxHops\": 0,\n    \"cdpSecondTimeout\": \"5\",\n    \"preserveConfig\": false\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric_id_number}}/inventory/test-reachability",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric_id_number}}",
								"inventory",
								"test-reachability"
							]
						},
						"description": "Used to find switches within a given network to be added into DCNM inventory for a specific fabric. Options in payload are similar to Fabric Builder UI, in which a `seed IP`, `number of hops`, and device credentials are given for DCNM to \"walk\" through."
					},
					"response": []
				},
				{
					"name": "register switch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"switches\": [\n        {\n            \"deviceIndex\": \"n9kv-site1-leaf1(9J7ZJ3C08A0)\",\n            \"sysName\": \"n9kv-site1-leaf1\",\n            \"platform\": \"N9K-C9300v\",\n            \"version\": \"9.3(5)\",\n            \"ipaddr\": \"10.195.225.155\"\n        },\n        {\n            \"deviceIndex\": \"n9kv-site1-leaf2(9M9SRT47R3K)\",\n            \"sysName\": \"n9kv-site1-leaf2\",\n            \"platform\": \"N9K-C9300v\",\n            \"version\": \"9.3(5)\",\n            \"ipaddr\": \"10.195.225.156\"\n        },\n         {\n            \"deviceIndex\": \"n9kv-site1-leaf3(95V4MNBD0TC)\",\n            \"sysName\": \"n9kv-site1-leaf3\",\n            \"platform\": \"N9K-C9300v\",\n            \"version\": \"9.3(5)\",\n            \"ipaddr\": \"10.195.225.157\"\n        },\n        {\n            \"deviceIndex\": \"n9kv-site1-spine1(9IVJXBHB65C)\",\n            \"sysName\": \"n9kv-site1-spine1\",\n            \"platform\": \"N9K-C9300v\",\n            \"version\": \"9.3(5)\",\n            \"ipaddr\": \"10.195.225.159\"\n        }\n    ],\n    \"seedIP\": \"10.195.225.155\",\n    \"snmpV3AuthProtocol\": \"0\",\n    \"username\": \"admin\",\n    \"password\": \"ins3965!\",\n    \"maxHops\": 0,\n    \"cdpSecondTimeout\": \"5\",\n    \"preserveConfig\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric_id_number}}/inventory/discover",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric_id_number}}",
								"inventory",
								"discover"
							]
						},
						"description": "Uses the reachability information as a payload to register switches as members of the fabric named within the URI.  All switches will be added as `leaf` nodes, which may require some reassignment using another API endpoint."
					},
					"response": []
				},
				{
					"name": "delete switch",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/fabrics/{{fabric}}/switches/9UNCWEXETE8",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"fabrics",
								"{{fabric}}",
								"switches",
								"9UNCWEXETE8"
							]
						},
						"description": "Removes switch (named by serial) in the URI from the fabric"
					},
					"response": []
				},
				{
					"name": "fabric backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/config/{{fabric}}/backup?tag=TestBackup1",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"{{fabric}}",
								"backup"
							],
							"query": [
								{
									"key": "tag",
									"value": "TestBackup1"
								}
							]
						},
						"description": "Creates a snapshot backup of the fabric named within the URI with a given user-defined tag"
					},
					"response": []
				}
			],
			"description": "Set of requests used for directly interacting with the fabric constructs within DCNM."
		},
		{
			"name": "Network Operations",
			"item": [
				{
					"name": "get proposed network vlan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"network_vlan_id\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/resource-manager/vlan/{{fabric}}?vlanUsageType=TOP_DOWN_NETWORK_VLAN",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"resource-manager",
								"vlan",
								"{{fabric}}"
							],
							"query": [
								{
									"key": "vlanUsageType",
									"value": "TOP_DOWN_NETWORK_VLAN"
								}
							]
						},
						"description": "Uses DCNM's resource manager to gather a network VLAN that is currently not in use within the system.  This returns a single value in the body upon a successful request, which then uses a JS test to populate the `network_vlan_id` ENV var"
					},
					"response": []
				},
				{
					"name": "get network details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks/",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks",
								""
							]
						},
						"description": "Used to list all the Networks under the selected fabric"
					},
					"response": []
				},
				{
					"name": "query network attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks/attachments?network-names={{network}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks",
								"attachments"
							],
							"query": [
								{
									"key": "network-names",
									"value": "{{network}}"
								}
							]
						},
						"description": "Used to list all the attached switches and ports and deployment status in the given networks, filtered by the network names defined in the URI.\n\n_Must have at least one network defined within the URI, but can be comma-separated list_"
					},
					"response": []
				},
				{
					"name": "create network",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fabric\":\"{{fabric}}\",\n   \"vrf\":\"{{vrf}}\",\n   \"networkName\":\"{{network}}\",\n   \"networkId\":\"{{network_id_number}}\",\n   \"networkTemplateConfig\":\"{\\\"gatewayIpAddress\\\":\\\"10.3.4.1/24\\\", \\\"vlanId\\\":\\\"{{network_vlan_id}}\\\"}\",\n   \"networkTemplate\":\"Default_Network_Universal\",\n   \"networkExtensionTemplate\":\"Default_Network_Extension_Universal\"\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks"
							],
							"query": [
								{
									"key": "dcnm-token",
									"value": "{{token}}",
									"disabled": true
								}
							]
						},
						"description": "Creates a new network with the unused VLAN ID in the fabric named within the URI path.  \n\n_Note: `{{ network_id_number }}` is defined as an ENV var, but will need to be changed if more than one network is created on DCNM._"
					},
					"response": []
				},
				{
					"name": "attach network to switches",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"networkName\": \"{{network}}\",\n        \"lanAttachList\": [\n            {\n                \"fabric\": \"{{fabric}}\",\n                \"networkName\": \"{{network}}\",\n                \"serialNumber\": \"FDO221516D9\",\n                \"switchPorts\": \"Port-channel1\",\n                \"vlan\": \"{{network_vlan_id}}\",\n                \"dot1QVlan\": 1,\n                \"untagged\": false,\n                \"freeformConfig\": \"\",\n                \"deployment\": true\n            },\n            {\n                \"fabric\": \"{{fabric}}\",\n                \"networkName\": \"{{network}}\",\n                \"serialNumber\": \"FDO220925TL\",\n                \"switchPorts\": \"Port-channel1\",\n                \"vlan\": \"{{network_vlan_id}}\",\n                \"dot1QVlan\": 1,\n                \"untagged\": false,\n                \"freeformConfig\": \"\",\n                \"deployment\": true\n            }\n        ]\n    }\n]"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks/attachments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks",
								"attachments"
							]
						},
						"description": "Attaches the created network to the leaf switches defined within the payload of the request.  \n\n_Please ensure proper serial numbers and \"edge-facing\" ports are referenced in the payload_"
					},
					"response": []
				},
				{
					"name": "deploy network",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks/{{network}}/deploy",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks",
								"{{network}}",
								"deploy"
							]
						},
						"description": "Used to deploy the pending config a Network under the selected fabric.  Requires network to be created and attached for successful deployment to fabric"
					},
					"response": []
				},
				{
					"name": "delete network",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/networks/{{network}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"networks",
								"{{network}}"
							],
							"query": [
								{
									"key": "dcnm-token",
									"value": "{{token}}",
									"disabled": true
								}
							]
						},
						"description": "Deletes the network named within the URI path"
					},
					"response": []
				}
			],
			"description": "Operations focused on the \"network\" overlays within the EVPN-VXLAN fabric"
		},
		{
			"name": "Interface Operations",
			"item": [
				{
					"name": "config ethernet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policy\": \"int_trunk_host_11_1\",\n    \"interfaces\": [\n        {\n            \"serialNumber\": \"FDO221516D9\",\n            \"interfaceType\": \"INTERFACE_ETHERNET\",\n            \"ifName\": \"Ethernet1/22\",\n            \"fabricName\": \"{{fabric}}\",\n            \"nvPairs\": {\n                \"BPDUGUARD_ENABLED\": \"no\",\n                \"PORTTYPE_FAST_ENABLED\": true,\n                \"MTU\": \"jumbo\",\n                \"SPEED\": \"Auto\",\n                \"ALLOWED_VLANS\": \"none\",\n                \"DESC\": \"\",\n                \"CONF\": \" ttag\\n ttag-strip\\n description test\",\n                \"ADMIN_STATE\": true,\n                \"INTF_NAME\": \"Ethernet1/22\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface/",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create port channel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policy\": \"int_port_channel_trunk_host_11_1\",\n    \"interfaceType\": \"INTERFACE_PORT_CHANNEL\",\n    \"interfaces\": [\n        {\n            \"serialNumber\": \"FDO22120N0T\",\n            \"interfaceType\": \"INTERFACE_PORT_CHANNEL\",\n            \"ifName\": \"Port-channel501\",\n            \"fabricName\": \"{{fabric}}\",\n            \"nvPairs\": {\n                \"MEMBER_INTERFACES\": \"eth1/23-24\",\n                \"PC_MODE\": \"active\",\n                \"BPDUGUARD_ENABLED\": \"true\",\n                \"PORTTYPE_FAST_ENABLED\": true,\n                \"MTU\": \"jumbo\",\n                \"ALLOWED_VLANS\": \"none\",\n                \"DESC\": \"\",\n                \"CONF\": \"\",\n                \"ADMIN_STATE\": true,\n                \"PO_ID\": \"Port-channel501\"\n            }\n        }\n    ],\n    \"skipResourceCheck\": true\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface"
							]
						}
					},
					"response": []
				},
				{
					"name": "create vpc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policy\": \"int_vpc_trunk_host_11_1\",\n    \"interfaceType\": \"INTERFACE_VPC\",\n    \"interfaces\": [\n        {\n            \"serialNumber\": \"FDO221516D9~FDO220925TL\",\n            \"interfaceType\": \"INTERFACE_VPC\",\n            \"ifName\": \"vPC10\",\n            \"fabricName\": \"{{fabric}}\",\n            \"nvPairs\": {\n                \"PEER1_PCID\": \"10\",\n                \"PEER2_PCID\": \"10\",\n                \"PEER1_MEMBER_INTERFACES\": \"eth1/23\",\n                \"PEER2_MEMBER_INTERFACES\": \"eth1/23\",\n                \"PC_MODE\": \"active\",\n                \"BPDUGUARD_ENABLED\": \"true\",\n                \"PORTTYPE_FAST_ENABLED\": true,\n                \"MTU\": \"jumbo\",\n                \"PEER1_ALLOWED_VLANS\": \"none\",\n                \"PEER2_ALLOWED_VLANS\": \"none\",\n                \"PEER1_PO_DESC\": \"\",\n                \"PEER2_PO_DESC\": \"\",\n                \"PEER1_PO_CONF\": \"switchport trunk allowed vlan 1-4094\",\n                \"PEER2_PO_CONF\": \"switchport trunk allowed vlan 1-4094\",\n                \"ADMIN_STATE\": true,\n                \"INTF_NAME\": \"vPC10\"\n            }\n        }\n    ],\n    \"skipResourceCheck\": false\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface"
							]
						}
					},
					"response": []
				},
				{
					"name": "create loopback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policy\": \"int_loopback_11_1\",\n    \"interfaceType\": \"INTERFACE_LOOPBACK\",\n    \"interfaces\": [\n        {\n            \"serialNumber\": \"FDO22120N0T\",\n            \"interfaceType\": \"INTERFACE_LOOPBACK\",\n            \"ifName\": \"Loopback10\",\n            \"fabricName\": \"{{fabric}}\",\n            \"nvPairs\": {\n                \"INTF_VRF\": \"{{vrf}}\",\n                \"IP\": \"10.10.10.10\",\n                \"V6IP\": \"101::101\",\n                \"ROUTE_MAP_TAG\": \"12345\",\n                \"DESC\": \"\",\n                \"CONF\": \"\",\n                \"ADMIN_STATE\": true,\n                \"INTF_NAME\": \"Loopback10\"\n            }\n        }\n    ],\n    \"skipResourceCheck\": false\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface"
							]
						}
					},
					"response": []
				},
				{
					"name": "create routed subif",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policy\": \"int_subif_11_1\",\n    \"interfaceType\": \"SUBINTERFACE\",\n    \"interfaces\": [\n        {\n            \"serialNumber\": \"FDO221516D9\",\n            \"interfaceType\": \"SUBINTERFACE\",\n            \"ifName\": \"Ethernet1/16.2\",\n            \"fabricName\": \"{{fabric}}\",\n            \"nvPairs\": {\n                \"VLAN\": \"2\",\n                \"INTF_VRF\": \"{{vrf}}\",\n                \"IP\": \"10.10.10.1\",\n                \"PREFIX\": \"24\",\n                \"IPv6\": \"\",\n                \"IPv6_PREFIX\": \"\",\n                \"MTU\": \"9216\",\n                \"DESC\": \"\",\n                \"CONF\": \"\",\n                \"ADMIN_STATE\": true,\n                \"INTF_NAME\": \"Ethernet1/16.2\"\n            }\n        }\n    ],\n    \"skipResourceCheck\": false\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface"
							]
						}
					},
					"response": []
				},
				{
					"name": "shutdown interface",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\": \"noshut\",\n  \"interfaces\": [\n    {\n      \"serialNumber\": \"9M9SRT47R3K\",\n      \"ifName\": \"Port-channel501\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface/adminstatus",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface",
								"adminstatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "deploy interface",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"serialNumber\": \"FDO221516D9\",\n        \"ifName\": \"Ethernet1/22\"\n    }\n]"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/interface/deploy",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface",
								"deploy"
							]
						}
					},
					"response": []
				},
				{
					"name": "query inteface",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{dcnm}}/rest/interface?serialNumber=FDO221516D9&ifName=Ethernet1%2F11",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"interface"
							],
							"query": [
								{
									"key": "serialNumber",
									"value": "FDO221516D9"
								},
								{
									"key": "ifName",
									"value": "Ethernet1%2F11"
								}
							]
						},
						"description": "Returns the Policy attached with each interface and corresponding config parameters(`nv_pairs`)"
					},
					"response": []
				}
			],
			"description": "Operations used for creating interfaces within DCNM.  Many of the payloads will look the same (with the exception of the interface type), so unique descriptions will not be provided for each.\n\nThis API should be used to create Port-channel, vPC, ST FEX, AA FEX, Loopback and Subinterface. Any interface can be added only once.\n\nInvoking this API more than once with same payload will return error Resource could not be allocated. Once invoked, any further changes to interface should be done using PUT API. Once the interface is added, use /rest/interface/deploy API to push the config to device.\n\nFollowing are the interfaceTypes corresponding to each interfaces:\n\n    Port Channel -- INTERFACE_PORT_CHANNEL\n\n    virtual Port Channel (vPC) --- INTERFACE_VPC\n\n    Loopback --- INTERFACE_LOOPBACK\n\n    Straight-through (ST) FEX --- STRAIGHT_TROUGH_FEX\n\n    Active-Active (AA) FEX --- AA_FEX\n\n    Subinterface --- SUBINTERFACE.\n\n    Ethernet --- INTERFACE_ETHERNET.\n\n    Switch Virtual Interface (SVI) --- INTERFACE_VLAN.\n\nFor adding vPC and AA FEX, serial number should be a combined serial number ex.FDO21331S8T~FDO21332E6X. User can get the combined serial number by using `/rest/interface/vpcpair_serial_number` REST API"
		},
		{
			"name": "Link Operations",
			"item": [
				{
					"name": "get all links",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/links",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"links"
							]
						},
						"description": "Used to list all of the links within DCNM"
					},
					"response": []
				},
				{
					"name": "get link info by uuid",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/links/LINK-UUID-88310",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"links",
								"LINK-UUID-88310"
							]
						},
						"description": "Gathers the link details for a given link defined by the UUID within the URI"
					},
					"response": []
				},
				{
					"name": "get all links in fabric",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/links/fabrics/{{fabric}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"links",
								"fabrics",
								"{{fabric}}"
							]
						},
						"description": "Gathers detailed information for all links within the fabric named within the URI"
					},
					"response": []
				},
				{
					"name": "modify link",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceFabric\": \"{{fabric}}\",\n    \"destinationFabric\": \"{{fabric}}\",\n    \"sourceDevice\": \"958WQIC6W4V\",\n    \"destinationDevice\": \"9FX0BBEC4TK\",\n    \"sourceSwitchName\": \"spine1\",\n    \"destinationSwitchName\": \"leaf1\",\n    \"sourceInterface\": \"Ethernet1/1\",\n    \"destinationInterface\": \"Ethernet1/10\",\n    \"templateName\": \"int_intra_fabric_num_link_11_1\",\n    \"nvPairs\": {\n        \"PEER1_IP\": \"10.4.0.5\",\n        \"PEER2_IP\": \"10.4.0.6\",\n        \"PEER1_V6IP\": \"\",\n        \"PEER2_V6IP\": \"\",\n        \"ADMIN_STATE\": true,\n        \"MTU\": \"9216\",\n        \"PEER1_BFD_ECHO_DISABLE\": false,\n        \"PEER2_BFD_ECHO_DISABLE\": false,\n        \"ENABLE_MACSEC\": false,\n        \"PEER1_DESC\": \"connected-to-leaf1-Ethernet1/10\",\n        \"PEER2_DESC\": \"connected-to-spine1-Ethernet1/1\",\n        \"PEER1_CONF\": \"\",\n        \"PEER2_CONF\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/links/LINK-UUID-57500",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"links",
								"LINK-UUID-57500"
							]
						},
						"description": "Modifies the parameters of an existing link through details given within the payload.  Payload can be retrieved from one of the `GET` operations listed within this folder"
					},
					"response": []
				},
				{
					"name": "delete link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/links/LINK-UUID-57500",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"links",
								"LINK-UUID-57500"
							]
						},
						"description": "Deletes the link named by the UUID given in the URI"
					},
					"response": []
				}
			]
		},
		{
			"name": "VRF Operations",
			"item": [
				{
					"name": "get vrf segment id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"vrf_id_number\", jsonData[\"partitionSegmentId\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/managed-pool/fabrics/{{fabric}}/partitions/ids",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"managed-pool",
								"fabrics",
								"{{fabric}}",
								"partitions",
								"ids"
							]
						},
						"description": "Uses DCNM resource manager to obtain a VRF segment ID value for tracking.  JS tests insert this into the `{{ vrf_id_number }}` ENV var"
					},
					"response": []
				},
				{
					"name": "get vrf lite dot1q id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"vrf_dot1q_vlan\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scopeType\": \"DeviceInterface\",\n    \"usageType\": \"TOP_DOWN_L3_DOT1Q\",\n    \"allocatedTo\": \"{{vrf}}\",\n    \"serialNumber\": \"9GNSW5DCTEZ\",\n    \"ifName\": \"Ethernet1/21\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/resource-manager/reserve-id",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"resource-manager",
								"reserve-id"
							]
						},
						"description": "Uses the DCNM resource manager to gather an unused 802.1q VLAN ID for use in the VRF for peering purposes.  JS test inserts this value after completion into the `{{ vrf_dot1q_vlan }}` ENV var"
					},
					"response": []
				},
				{
					"name": "get switch details by vrf",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/switches?vrf-names={{vrf}}&serial-numbers=9GNSW5DCTEZ",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"switches"
							],
							"query": [
								{
									"key": "vrf-names",
									"value": "{{vrf}}"
								},
								{
									"key": "serial-numbers",
									"value": "9GNSW5DCTEZ"
								}
							]
						},
						"description": "Used to obtain the switch details per VRF using a comma-separated list of VRF names and switch serial numbers defined within the URI"
					},
					"response": []
				},
				{
					"name": "query vrf",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs"
							]
						},
						"description": "Lists all VRFs in the fabric defined within the URI"
					},
					"response": []
				},
				{
					"name": "create vrf",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fabric\": \"{{fabric}}\",\n    \"vrfName\": \"{{vrf}}\",\n    \"vrfId\": \"{{vrf_id_number}}\",\n    \"vrfTemplate\": \"Default_VRF_Universal\",\n    \"vrfTemplateConfig\": \"{\\\"vrfVlanName\\\":\\\"\\\",\\\"vrfIntfDescription\\\":\\\"\\\",\\\"vrfDescription\\\":\\\"\\\",\\\"ipv6LinkLocalFlag\\\":true,\\\"mtu\\\":\\\"9216\\\",\\\"tag\\\":\\\"12345\\\",\\\"vrfRouteMap\\\":\\\"FABRIC-RMAP-REDIST-SUBNET\\\",\\\"maxBgpPaths\\\":\\\"1\\\",\\\"maxIbgpPaths\\\":\\\"2\\\",\\\"vrfSegmentId\\\":\\\"{{vrf_id_number}}\\\",\\\"vrfName\\\":\\\"{{vrf}}\\\",\\\"vrfVlanId\\\":\\\"2005\\\",\\\"nveId\\\":1,\\\"asn\\\":\\\"null\\\"}\",\n    \"vrfExtensionTemplate\": \"Default_VRF_Extension_Universal\",\n    \"source\": null,\n    \"serviceVrfTemplate\": null\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs"
							]
						},
						"description": "Creates a VRF within the fabric defined in the URI."
					},
					"response": []
				},
				{
					"name": "deploy vrf",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vrfNames\": \"{{vrf}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/deployments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"deployments"
							]
						},
						"description": "Deploys the previously created VRF to the fabric defined in the URI"
					},
					"response": []
				},
				{
					"name": "query vrf attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/attachments?vrf-names={{vrf}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"attachments"
							],
							"query": [
								{
									"key": "vrf-names",
									"value": "{{vrf}}"
								}
							]
						},
						"description": "Used to list all the attached switches and deployment status in the given VRFs"
					},
					"response": []
				},
				{
					"name": "create multi-site extension attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"vrfName\": \"{{vrf}}\",\n        \"lanAttachList\": [\n            {\n                \"fabric\": \"{{fabric}}\",\n                \"vrfName\": \"{{vrf}}\",\n                \"vlan\": \"{{vrf_dot1q_vlan}}\",\n                \"freeformConfig\": \"\",\n                \"serialNumber\": \"9S5NZ70B3JX\",\n                \"deployment\": true,\n                \"extensionValues\": \"\",\n                \"instanceValues\": \"{\\\"loopbackId\\\":\\\"\\\",\\\"loopbackIpAddress\\\":\\\"\\\",\\\"loopbackIpV6Address\\\":\\\"\\\"}\"\n            }\n        ]\n    }\n]"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/attachments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"attachments"
							]
						},
						"description": "This specific payload creates a multi-site extension VRF switch attachment within DCNM"
					},
					"response": []
				},
				{
					"name": "create vrf lite attachments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"vrfName\": \"{{vrf}}\",\n        \"lanAttachList\": [\n            {\n                \"fabric\": \"{{fabric}}\",\n                \"vrfName\": \"{{vrf}}\",\n                \"vlan\": \"{{vrf_dot1q_vlan}}\",\n                \"freeformConfig\": \"\",\n                \"serialNumber\": \"95V4MNBD0TC\",\n                \"deployment\": true,\n                \"extensionValues\": \"{\\\"VRF_LITE_CONN\\\":\\\"{\\\\\\\"VRF_LITE_CONN\\\\\\\":[{\\\\\\\"IF_NAME\\\\\\\":\\\\\\\"Ethernet1/3\\\\\\\",\\\\\\\"DOT1Q_ID\\\\\\\":\\\\\\\"{{vrf_dot1q_vlan}}\\\\\\\",\\\\\\\"IP_MASK\\\\\\\":\\\\\\\"10.33.0.1/30\\\\\\\",\\\\\\\"NEIGHBOR_IP\\\\\\\":\\\\\\\"10.33.0.2\\\\\\\",\\\\\\\"NEIGHBOR_ASN\\\\\\\":\\\\\\\"65301\\\\\\\",\\\\\\\"IPV6_MASK\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"IPV6_NEIGHBOR\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"AUTO_VRF_LITE_FLAG\\\\\\\":\\\\\\\"true\\\\\\\",\\\\\\\"PEER_VRF_NAME\\\\\\\":\\\\\\\"{{vrf}}\\\\\\\",\\\\\\\"VRF_LITE_JYTHON_TEMPLATE\\\\\\\":\\\\\\\"Ext_VRF_Lite_Jython\\\\\\\"}]}\\\",\\\"MULTISITE_CONN\\\":\\\"{\\\\\\\"MULTISITE_CONN\\\\\\\":[]}\\\"}\",\n                \"instanceValues\": \"{\\\"loopbackId\\\":\\\"\\\",\\\"loopbackIpAddress\\\":\\\"\\\",\\\"loopbackIpV6Address\\\":\\\"\\\"}\"\n            }\n        ]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/attachments",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"attachments"
							]
						},
						"description": "This specific payload creates a VRF-lite switch attachment"
					},
					"response": []
				},
				{
					"name": "update vrf",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fabric\": \"{{fabric}}\",\n    \"vrfName\": \"{{vrf}}\",\n    \"vrfTemplate\": \"Default_VRF_Universal\",\n    \"vrfExtensionTemplate\": \"Default_VRF_Extension_Universal\",\n    \"vrfTemplateConfig\": \"{\\\"advertiseDefaultRouteFlag\\\":\\\"false\\\",\\\"vrfVlanId\\\":\\\"\\\",\\\"isRPExternal\\\":\\\"false\\\",\\\"vrfDescription\\\":\\\"\\\",\\\"L3VniMcastGroup\\\":\\\"\\\",\\\"maxBgpPaths\\\":\\\"8\\\",\\\"maxIbgpPaths\\\":\\\"8\\\",\\\"vrfSegmentId\\\":\\\"{{vrf_id_number}}\\\",\\\"ipv6LinkLocalFlag\\\":\\\"true\\\",\\\"vrfRouteMap\\\":\\\"fabric-rmap-redist-subnet\\\",\\\"configureStaticDefaultRouteFlag\\\":\\\"false\\\",\\\"trmBGWMSiteEnabled\\\":\\\"false\\\",\\\"tag\\\":\\\"\\\",\\\"rpAddress\\\":\\\"\\\",\\\"nveId\\\":\\\"1\\\",\\\"SERVICE_CONFIG\\\":\\\"{}\\\",\\\"mtu\\\":\\\"9216\\\",\\\"multicastGroup\\\":\\\"\\\",\\\"advertiseHostRouteFlag\\\":\\\"true\\\",\\\"vrfVlanName\\\":\\\"\\\",\\\"trmEnabled\\\":\\\"false\\\",\\\"loopbackNumber\\\":\\\"\\\",\\\"asn\\\":\\\"65000\\\",\\\"vrfIntfDescription\\\":\\\"\\\",\\\"vrfName\\\":\\\"{{vrf}}\\\"}\",\n    \"vrfId\": {{vrf_id_number}},\n    \"serviceVrfTemplate\": null,\n    \"source\": null\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/{{vrf}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"{{vrf}}"
							]
						},
						"description": "Updates the template configuration applied to a VRF after deployment"
					},
					"response": []
				},
				{
					"name": "delete vrf",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/top-down/fabrics/{{fabric}}/vrfs/{{vrf}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"top-down",
								"fabrics",
								"{{fabric}}",
								"vrfs",
								"{{vrf}}"
							]
						},
						"description": "Deletes the defined VRF within the fabric defined inside of the URI"
					},
					"response": []
				}
			],
			"description": "Set of requests that focuses on top-down VRF operations, either between fabrics, or as a multisite extension."
		},
		{
			"name": "LAN Credential Management",
			"item": [
				{
					"name": "get default lan credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/fm/fmrest/lanConfig/getLanSwitchCredentials",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"fm",
								"fmrest",
								"lanConfig",
								"getLanSwitchCredentials"
							]
						},
						"description": "Retrieves LAN credentials currently present.  Will not display usernames or passwords in clear text."
					},
					"response": []
				},
				{
					"name": "update default lan credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Dcnm-Token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{default_lan_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{default_lan_password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{dcnm}}/fm/fmrest/lanConfig/saveDefaultCredentials",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"fm",
								"fmrest",
								"lanConfig",
								"saveDefaultCredentials"
							]
						},
						"description": "Sends updated device credentials to DCNM.  Uses defined ENV vars"
					},
					"response": []
				}
			],
			"description": "Requests for interacting with the Default LAN Credentials tab within DCNM.  These credentials are used when device-specific credentials are undefined during device reachability/discovery"
		},
		{
			"name": "Template Operations",
			"item": [
				{
					"name": "get all templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								""
							]
						},
						"description": "Query all configuration templates defined inside of DCNM (includes both system- and user-defined templates)"
					},
					"response": []
				},
				{
					"name": "get specific template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/telemetry_config?populate=true",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"telemetry_config"
							],
							"query": [
								{
									"key": "populate",
									"value": "true"
								}
							]
						},
						"description": "Gathers the specific configuration template as defined by the name of the template within the URI"
					},
					"response": []
				},
				{
					"name": "validate template data",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"##template properties \\nname=telemetry_config;\\ndescription = ;\\ntags = ;\\nuserDefined = true;\\nsupportedPlatforms = All;\\ntemplateType = POLICY;\\ntemplateSubType = DEVICE;\\ncontentType = TEMPLATE_CLI;\\nimplements = implements;\\ndependencies = ;\\npublished = false;\\n##\\n##template variables\\n @(DisplayName=\\\"Certificate Path\\\", Description=\\\"Location of certificate for telemetry export\\\")\\nstring CRT_PATH;\\n\\n##\\n##template content\\ntelemetry\\n certificate $$CRT_PATH$$ telegraf\\n destination-profile\\n use-vrf management\\n destination-group 1\\n ip address 10.195.225.176 port 57000 protocol gRPC encoding GPB\\n sensor-group 1\\n data-source DME\\n path sys/ch depth unbounded\\n subscription 1\\n dst-grp 1\\n snsr-grp 1 sample-interval 10000\\n##\"",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/validate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"validate"
							]
						},
						"description": "Validates the structure of a given template configuration against the DCNM syntax and language.  This input is strictly a string in nature"
					},
					"response": []
				},
				{
					"name": "create template config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"##template properties \\nname=telemetry_config;\\ndescription = ;\\ntags = ;\\nuserDefined = true;\\nsupportedPlatforms = All;\\ntemplateType = POLICY;\\ntemplateSubType = DEVICE;\\ncontentType = TEMPLATE_CLI;\\nimplements = implements;\\ndependencies = ;\\npublished = false;\\n##\\n##template variables\\n @(DisplayName=\\\"Certificate Path\\\", Description=\\\"Location of certificate for telemetry export\\\")\\nstring CRT_PATH;\\n\\n##\\n##template content\\ntelemetry\\n certificate $$CRT_PATH$$ telegraf\\n destination-profile\\n use-vrf management\\n destination-group 1\\n ip address 10.195.225.176 port 57000 protocol gRPC encoding GPB\\n sensor-group 1\\n data-source DME\\n path sys/ch depth unbounded\\n subscription 1\\n dst-grp 1\\n snsr-grp 1 sample-interval 10000\\n##\"\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/telemetry_config",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"telemetry_config"
							]
						},
						"description": "Creates a configuration template within DCNM using the verified configuration data from the verification step"
					},
					"response": []
				},
				{
					"name": "template variable population",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CRT_PATH\": \"/bootflash/telegraf.crt\"\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/telemetry_config/populate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"telemetry_config",
								"populate"
							]
						},
						"description": "Creates the configuration output from a template given the inputs defined within the payload of this request and the name of the template defined in the URI"
					},
					"response": []
				},
				{
					"name": "update  template config",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"##template properties \\nname=telemetry_config;\\ndescription = ;\\ntags = ;\\nuserDefined = true;\\nsupportedPlatforms = All;\\ntemplateType = POLICY;\\ntemplateSubType = DEVICE;\\ncontentType = TEMPLATE_CLI;\\nimplements = implements;\\ndependencies = ;\\npublished = false;\\n##\\n##template variables\\n @(DisplayName=\\\"Certificate Path\\\", Description=\\\"Location of certificate for telemetry export\\\")\\nstring CRT_PATH;\\n\\n##\\n##template content\\nfeature telemetry\\n\\ntelemetry\\n  certificate $$CRT_PATH$$ telegraf\\n  destination-profile\\n    use-vrf management\\n  destination-group 1\\n    ip address 10.195.225.176 port 57000 protocol gRPC encoding GPB\\n  sensor-group 1\\n    data-source DME\\n    path sys/ch depth unbounded\\n  sensor-group 2\\n    data-source DME\\n    path sys/intf depth unbounded\\n  sensor-group 3\\n    data-source DME\\n    path sys/bgp depth unbounded\\n  sensor-group 4\\n    data-source DME\\n    path sys/procsys/syscpusummary/syscpuhistory-last60seconds\\n  sensor-group 5\\n    data-source DME\\n    path sys/procsys/sysmem/sysmemusage\\n  sensor-group 6\\n    data-source DME\\n    path sys/bd depth unbounded\\n  sensor-group 7\\n    data-source DME\\n    path sys/mac depth unbounded\\n  sensor-group 8\\n    data-source DME\\n    path sys/evpn depth 4\\n  sensor-group 9\\n    data-source DME\\n    path sys/urib depth unbounded query-condition rsp-foreign-subtree=ephemeral\\n  sensor-group 10\\n    data-source DME\\n    path sys/u6rib depth unbounded query-condition rsp-foreign-subtree=ephemeral\\n  sensor-group 11\\n    data-source DME\\n    path sys/bgp/inst/dom-default/af-[l2vpn-evpn] depth unbounded query-condition rsp-foreign-subtree=ephemeral\\n  subscription 1\\n    dst-grp 1\\n    snsr-grp 1 sample-interval 10000\\n  subscription 2\\n    dst-grp 1\\n    snsr-grp 2 sample-interval 10000\\n  subscription 3\\n    dst-grp 1\\n    snsr-grp 3 sample-interval 30000\\n  subscription 4\\n    dst-grp 1\\n    snsr-grp 4 sample-interval 15000\\n  subscription 5\\n    dst-grp 1\\n    snsr-grp 5 sample-interval 15000\\n  subscription 6\\n    dst-grp 1\\n    snsr-grp 6 sample-interval 0\\n  subscription 7\\n    dst-grp 1\\n    snsr-grp 7 sample-interval 10000\\n  subscription 8\\n    dst-grp 1\\n    snsr-grp 8 sample-interval 15000\\n  subscription 9\\n    dst-grp 1\\n    snsr-grp 9 sample-interval 15000\\n  subscription 10\\n    dst-grp 1\\n    snsr-grp 10 sample-interval 15000\\n  subscription 11\\n    dst-grp 1\\n    snsr-grp 11 sample-interval 15000##\"\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/telemetry_config",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"telemetry_config"
							]
						},
						"description": "Updates the configuration defined in an existing template within DCNM"
					},
					"response": []
				},
				{
					"name": "delete template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/config/templates/telemetry_config",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"config",
								"templates",
								"telemetry_config"
							]
						},
						"description": "Removes the template defined in the URI from DCNM"
					},
					"response": []
				}
			],
			"description": "Grouping of requests focused on configuration template creation, management, application, and verification"
		},
		{
			"name": "Policy Operations",
			"item": [
				{
					"name": "get policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/policies/switches?serialNumber=9FXMD0HF6F3",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"policies",
								"switches"
							],
							"query": [
								{
									"key": "serialNumber",
									"value": "9FXMD0HF6F3"
								}
							]
						},
						"description": "List the applied policies to a switch based on the comma-separated list of serial numbers defined within the URI"
					},
					"response": []
				},
				{
					"name": "create policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"source\": \"\",\n    \"serialNumber\": \"9M7JYFZ2HEH\",\n    \"entityType\": \"SWITCH\",\n    \"entityName\": \"SWITCH\",\n    \"templateName\": \"telemetry_config\",\n    \"priority\": \"500\",\n    \"description\": \"created from ansible\",\n    \"nvPairs\": {}\n}\n"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/policies",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"policies"
							]
						},
						"description": "Creates a specific application of a policy against the switch defined by the serial number in the payload"
					},
					"response": []
				},
				{
					"name": "deploy policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{policy_id_number}}\"\n]"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/policies/deploy",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"policies",
								"deploy"
							]
						},
						"description": "Deploys the created policy-switch assignment to the devices"
					},
					"response": []
				},
				{
					"name": "delete policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/policies/{{policy_id_number}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"policies",
								"{{policy_id_number}}"
							]
						},
						"description": "Deletes a given policy as defined by the policyID value defined within the URI"
					},
					"response": []
				}
			],
			"description": "Set of requests that focus on the applied control policies applied to switches within the DCNM inventory"
		},
		{
			"name": "Image/Package Management",
			"item": [
				{
					"name": "get all uploaded images",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/poap/servers/uploaded-images-table",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"poap",
								"servers",
								"uploaded-images-table"
							]
						},
						"description": "Retrieves a table of all uploaded NXOS images within DCNM"
					},
					"response": []
				},
				{
					"name": "get all active and inactive packages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/packages",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"packages"
							]
						},
						"description": "Lists all active and inactive RPMs/SMUs within DCNM"
					},
					"response": []
				},
				{
					"name": "get available uploaded packages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/uploaded-packages",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"uploaded-packages"
							]
						},
						"description": "Lists all active and inactive RPMs/SMUs within DCNM"
					},
					"response": []
				},
				{
					"name": "image upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "imageFileName",
									"type": "file",
									"src": "/Users/shdu/Downloads/mtx-openconfig-all-1.0.0.0-9.3.5.lib32_n9000.rpm"
								}
							]
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/poap/servers/SmartImageUpload",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"poap",
								"servers",
								"SmartImageUpload"
							]
						},
						"description": "Uploads an image to DCNM"
					},
					"response": []
				},
				{
					"name": "create compatiblity check job (full payload)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var id = parseInt(responseBody)",
									"postman.setEnvironmentVariable(\"job_id\", id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -1,\n    \"eraseStartUp\": false,\n    \"saverunningConfig\": true,\n    \"archiveFailureLog\": true,\n    \"concurrentExec\": true,\n    \"executeImmediately\": true,\n    \"scheduledTime\": 1595530823940,\n    \"jobCreationTime\": 1595530823940,\n    \"comments\": \"\",\n    \"jobOwner\": \"admin\",\n    \"jobType\": 2,\n    \"taskList\": [\n        {\n            \"ethSwitch_id\": 39570,\n            \"hostName\": \"93240-FX2-1\",\n            \"ipAddress\": \"172.25.74.70\",\n            \"platform\": \"N9K\",\n            \"version\": \"9.3(4)\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"systemImageFile\": \"/var/lib/dcnm//upload//N9K/nxos.9.3.5.bin\",\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"type\": \"SERVER\",\n            \"vrfSelected\": \"management\",\n            \"parallelLineCardUpgrade\": false,\n            \"compatibilty_status\": \"SKIPPED\",\n            \"serverName\": \"Default_SCP_Repository\",\n            \"sequence\": 1,\n            \"noReload\": false,\n            \"nonDisruptive\": false,\n            \"nonInterruptive\": false,\n            \"biosForce\": true\n        },\n        {\n            \"ethSwitch_id\": 40930,\n            \"hostName\": \"93240-FX2-2\",\n            \"ipAddress\": \"172.25.74.61\",\n            \"platform\": \"N9K\",\n            \"version\": \"9.3(3)\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"systemImageFile\": \"/var/lib/dcnm//upload//N9K/nxos.9.3.5.bin\",\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"type\": \"SERVER\",\n            \"vrfSelected\": \"management\",\n            \"parallelLineCardUpgrade\": false,\n            \"compatibilty_status\": \"SKIPPED\",\n            \"serverName\": \"Default_SCP_Repository\",\n            \"sequence\": 2,\n            \"noReload\": false,\n            \"nonDisruptive\": false,\n            \"nonInterruptive\": false,\n            \"biosForce\": true\n        }\n    ],\n    \"nvPairs\": {\n        \"VPC_ISSU\": \"na\"\n    },\n    \"prePostTemplate\": \"issu_vpc_check\"\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/imagemanagement/job",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"imagemanagement",
								"job"
							]
						},
						"description": "Full payload defined for creating an image compatibility check against an NXOS device.  Full example body:\n```\nExample Body: {\"id\":-1,\"eraseStartUp\":false,\"saverunningConfig\":true,\"archiveFailureLog\":true,\"concurrentExec\":true,\"executeImmediately\":true, \"comments\":\"\",\"jobType\":2,\"taskList\":[{\"hostName\":\"spine-1\",\"ipAddress\":\"10.195.198.244\",\"platform\":\"N9K\",\"version\":\"7.0(3)I7(6)\", \"kickStartImage\":\"/NotApplicable\",\"systemImageFile\":\"bootflash:/nxos.9.2.3.bin\",\"ssiImageFile\":\"/NotApplicable\",\"type\":\"DEVICE\",\"vrfSelected\":\"management\", \"parallelLineCardUpgrade\":false,\"compatibilty_status\":\"PLANNED\",\"sequence\":1,\"noReload\":false,\"nonDisruptive\":false,\"nonInterruptive\":true,\"biosForce\":false}]} \n```"
					},
					"response": []
				},
				{
					"name": "create compatiblity check job (minimum payload)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var id = parseInt(responseBody)",
									"postman.setEnvironmentVariable(\"job_id\", id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": -1,\n    \"eraseStartUp\": false,\n    \"saverunningConfig\": true,\n    \"archiveFailureLog\": true,\n    \"concurrentExec\": true,\n    \"executeImmediately\": true,\n    \"jobType\": 2,\n    \"taskList\": [\n        {\n            \"hostName\": \"93240-FX2-1\",\n            \"ipAddress\": \"172.25.74.70\",\n            \"platform\": \"N9K\",\n            \"version\": \"9.3(4)\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"systemImageFile\": \"/var/lib/dcnm//upload//N9K/nxos.9.3.5.bin\",\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"type\": \"SERVER\",\n            \"vrfSelected\": \"management\",\n            \"parallelLineCardUpgrade\": false,\n            \"compatibilty_status\": \"SKIPPED\",\n            \"serverName\": \"Default_SCP_Repository\",\n            \"sequence\": 1,\n            \"noReload\": false,\n            \"nonDisruptive\": false,\n            \"nonInterruptive\": true,\n            \"biosForce\": true\n        },\n        {\n            \"hostName\": \"93240-FX2-2\",\n            \"ipAddress\": \"172.25.74.61\",\n            \"platform\": \"N9K\",\n            \"version\": \"9.3(4)\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"systemImageFile\": \"bootflash:/nxos.9.3.5.bin\",\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"type\": \"DEVICE\",\n            \"vrfSelected\": \"management\",\n            \"parallelLineCardUpgrade\": false,\n            \"compatibilty_status\": \"SKIPPED\",\n            \"sequence\": 2,\n            \"noReload\": false,\n            \"nonDisruptive\": false,\n            \"nonInterruptive\": true,\n            \"biosForce\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/imagemanagement/job",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"imagemanagement",
								"job"
							]
						},
						"description": "Minimum payload defined for creating an image compatibility check against an NXOS device.  Full example body:\n```\nExample Body: {\"id\":-1,\"eraseStartUp\":false,\"saverunningConfig\":true,\"archiveFailureLog\":true,\"concurrentExec\":true,\"executeImmediately\":true, \"comments\":\"\",\"jobType\":2,\"taskList\":[{\"hostName\":\"spine-1\",\"ipAddress\":\"10.195.198.244\",\"platform\":\"N9K\",\"version\":\"7.0(3)I7(6)\", \"kickStartImage\":\"/NotApplicable\",\"systemImageFile\":\"bootflash:/nxos.9.2.3.bin\",\"ssiImageFile\":\"/NotApplicable\",\"type\":\"DEVICE\",\"vrfSelected\":\"management\", \"parallelLineCardUpgrade\":false,\"compatibilty_status\":\"PLANNED\",\"sequence\":1,\"noReload\":false,\"nonDisruptive\":false,\"nonInterruptive\":true,\"biosForce\":false}]} \n```"
					},
					"response": []
				},
				{
					"name": "install package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"packageMgrTask\": [\n    {\n      \"switchSerial\": \"string\",\n      \"packageName\": \"packagename.rpm\",\n      \"type\": \"SERVER\",\n      \"jobType\": \"INSTALL\",\n      \"serverName\": \"Default_SCP_Repository\",\n      \"vrfSelected\": \"management\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/activate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"activate"
							]
						},
						"description": "Installs package from DCNM or on device bootflash to device"
					},
					"response": []
				},
				{
					"name": "activate package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"packageMgrTask\": [\n    {\n      \"switchSerial\": \"string\",\n      \"packageName\": \"packagename.rpm\",\n      \"type\": \"SERVER\",\n      \"jobType\": \"ACTIVATE\",\n      \"serverName\": \"Default_SCP_Repository\",\n      \"vrfSelected\": \"management\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/activate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"activate"
							]
						},
						"description": "Activates a package from DCNM or local storage on device"
					},
					"response": []
				},
				{
					"name": "deactivate package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"packageMgrTask\": [\n    {\n      \"switchSerial\": \"string\",\n      \"packageName\": \"packagename.rpm\",\n      \"type\": \"SERVER\",\n      \"jobType\": \"DEACTIVATE\",\n      \"serverName\": \"Default_SCP_Repository\",\n      \"vrfSelected\": \"management\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/activate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"activate"
							]
						},
						"description": "Deactivates package on device"
					},
					"response": []
				},
				{
					"name": "uninstall package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"packageMgrTask\": [\n    {\n      \"switchSerial\": \"string\",\n      \"packageName\": \"packagename.rpm\",\n      \"type\": \"SERVER\",\n      \"jobType\": \"UNINSTALL\",\n      \"serverName\": \"Default_SCP_Repository\",\n      \"vrfSelected\": \"management\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/packagemgnt/activate",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"packagemgnt",
								"activate"
							]
						},
						"description": "Uninstalls package from device"
					},
					"response": []
				},
				{
					"name": "upgrade nxos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"archiveFailureLog\": true,\n    \"concurrentExec\": false,\n    \"eraseStartUp\": false,\n    \"executeImmediately\": true,\n    \"id\": {{job_id}},\n    \"jobOwner\": \"admin\",\n    \"jobType\": 0,\n    \"maintenanceMode\": false,\n    \"saverunningConfig\": true,\n    \"skipDisruptiveUpgrade\": false,\n    \"strJobCreationTime\": \"Jul/23/2020, 16:10:43\",\n    \"strScheduledTime\": \"Jul/24/2020, 16:10:00\",\n    \"taskList\": [\n        {\n            \"compatibilty_status\": \"SKIPPED\",\n            \"hostName\": \"93240-FX2-1\",\n            \"id\": 97,\n            \"ipAddress\": \"172.25.74.70\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"parallelLineCardUpgrade\": false,\n            \"platform\": \"N9K\",\n            \"serverName\": \"Default_SCP_Repository\",\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"systemImageFile\": \"/var/lib/dcnm//upload//N9K/nxos.9.3.5.bin\",\n            \"type\": \"SERVER\",\n            \"version\": \"9.3(4)\",\n            \"vrfSelected\": \"management\"\n        },\n        {\n            \"compatibilty_status\": \"SKIPPED\",\n            \"hostName\": \"93240-FX2-2\",\n            \"id\": 98,\n            \"ipAddress\": \"172.25.74.61\",\n            \"kickStartImage\": \"/Not Applicable\",\n            \"parallelLineCardUpgrade\": false,\n            \"platform\": \"N9K\",\n            \"serverName\": null,\n            \"ssiImageFile\": \"/Not Applicable\",\n            \"systemImageFile\": \"bootflash:/nxos.9.3.5.bin\",\n            \"type\": \"DEVICE\",\n            \"version\": \"9.3(4)\",\n            \"vrfSelected\": \"management\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/imagemanagement/job",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"imagemanagement",
								"job"
							]
						},
						"description": "Uses same endpoint as compatibility check, but with unique payload for image upgrade.  \nFull payload example:\n```\nExample Body: {\"id\":\"1\",\"eraseStartUp\":false,\"saverunningConfig\":true,\"archiveFailureLog\":true,\"concurrentExec\":true,\"executeImmediately\":false, \"comments\":\"\",\"jobOwner\":\"admin\",\"jobType\":0,\"strScheduledTime\":\"Apr/26/2019,11:30:00\",\"strJobCreationTime\":\"Apr/26/2019,11:30:00\", \"maintenanceMode\":false,\"skipDisruptiveUpgrade\":false,\"taskList\":[{\"kickStartImage\":\"/NotApplicable\",\"systemImageFile\":\"/var/lib/dcnm/images/nxos.9.2.3.bin\", \"ssiImageFile\":\"/NotApplicable\",\"installLog\":\"\",\"taskAction\":\"Completed\",\"statusDescr\":\"\",\"compatibilty_desc\":\"Disruptiveupgrade\", \"path\":null,\"strStatus\":\"NA\",\"strCompStatus\":\"SUCCESS\",\"vrfSelected\":\"management\",\"actionType\":0,\"sequence\":1,\"jobId\":1,\"bdualSup\":false, \"strScheduledTime\":null,\"strCompletedTime\":null,\"bMaintenanceMode\":false,\"parallelLineCardUpgrade\":false,\"noReload\":false,\"nonDisruptive\":false, \"nonInterruptive\":true,\"biosForce\":false,\"id\":2,\"hostName\":\"spine-1\",\"ipAddress\":\"10.195.198.244\",\"platform\":\"N9K\",\"version\":\"7.0(3)I7(6)\", \"serverName\":\"Default_SCP_Repository\",\"maintenanceDesc\":null,\"type\":\"SERVER\",\"status\":\"NA\",\"compatibilty_status\":\"SUCCESS\"}]} \n```"
					},
					"response": []
				},
				{
					"name": "get job details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "dcnm-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/imagemanagement/job/{{job_id}}",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"imagemanagement",
								"job",
								"{{job_id}}"
							]
						},
						"description": "Retrieves the status of an image compatibility or upgrade job"
					},
					"response": []
				},
				{
					"name": "delete image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "dcnm-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deleteTasksList\": [\n        {\n            \"imagename\": \"mtx-openconfig-all-1.0.0.0-9.3.5.src.rpm\"\n        },\n        {\n            \"imagename\": \"n9000-epld.9.3.5.img\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/poap/servers/smart-image",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"poap",
								"servers",
								"smart-image"
							]
						},
						"description": "Removes image from DCNM image store"
					},
					"response": []
				}
			],
			"description": "Set of requests used to interact with the software and package management APIs within DCNM"
		},
		{
			"name": "Switch Operations",
			"item": [
				{
					"name": "list switch roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/switches/roles",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"switches",
								"roles"
							]
						},
						"description": "Lists the roles currently applied to all switches.  Can optionally use a query-filter with a comma-separated list of serial numbers to extract the information for only the desired switches"
					},
					"response": []
				},
				{
					"name": "set switch role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"serialNumber\": \"9FXMD0HF6F3\",\n        \"role\": \"leaf\"\n    }\n]"
						},
						"url": {
							"raw": "https://{{dcnm}}/rest/control/switches/roles",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"switches",
								"roles"
							]
						},
						"description": "Used to set the desired device's role within the fabric.  Can be one or more devices defined within the array.  \n\n_Please ensure correct serial numbers are used within the array_"
					},
					"response": []
				},
				{
					"name": "get fabric by serial",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/switches/95ZCG398F5C/fabric-name",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"switches",
								"95ZCG398F5C",
								"fabric-name"
							]
						},
						"description": "Gather the fabric membership of a single switch based on the serial number defined within the URI"
					},
					"response": []
				},
				{
					"name": "get ip by serial",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Dcnm-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dcnm}}/rest/control/switches/95ZCG398F5C/myip",
							"protocol": "https",
							"host": [
								"{{dcnm}}"
							],
							"path": [
								"rest",
								"control",
								"switches",
								"95ZCG398F5C",
								"myip"
							]
						},
						"description": "Gather the address of a switch (as used for management within DCNM) based on the serial number defined within the URI"
					},
					"response": []
				}
			],
			"description": "Set of API requests used to directly interact within switches managed by DCNM.  Devices need to be added to inventory (and to a fabric in some calls) for proper function."
		},
		{
			"name": "dcnm login - gather token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData[\"Dcnm-Token\"]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"expirationTime\": 90000000\n}"
				},
				"url": {
					"raw": "https://{{dcnm}}/rest/logon",
					"protocol": "https",
					"host": [
						"{{dcnm}}"
					],
					"path": [
						"rest",
						"logon"
					]
				},
				"description": "Used to gather the DCNM token for API operations.  Authenticates using encoding of the username and password defined within the ENV.  The returned key is added to an ENV var for use by every other DCNM API call using a JS test.  Timeout value is excessively long for testing purposes and is defined in milliseconds"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}